{"ast":null,"code":"import _asyncToGenerator from \"/Users/hnm/Downloads/SEIICodeTestIRIS-main/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/subdivision-data-display/subdivision-data-display.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/table\";\nimport * as i4 from \"@angular/material/sort\";\nimport * as i5 from \"@angular/material/paginator\";\n\nfunction SubdivisionDataDisplayComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const food_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", food_r14.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", food_r14.viewValue, \" \");\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" ID \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r15.id, \" \");\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" CODE \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r16.code, \" \");\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" NAME \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r17.name, \" \");\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" LONGITUDE \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r18.longitude, \" \");\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_th_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" LATITUDE \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_td_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r19.latitude, \" \");\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 18);\n  }\n}\n\nfunction SubdivisionDataDisplayComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 19);\n  }\n}\n\nconst _c0 = function () {\n  return [5, 10, 25, 100];\n};\n\nexport class SubdivisionDataDisplayComponent {\n  /*= new MatPaginator(\n    new MatPaginatorIntl(),\n    ChangeDetectorRef.prototype\n  );*/\n  constructor(subDivisionService) {\n    this.subDivisionService = subDivisionService;\n    this.displayedColumns = [\"id\", \"code\", \"name\", \"longitude\", \"latitude\"];\n    this.sortType = \"asc\"; // defaoult value\n\n    this.sortField = \"id\"; // defaoult value\n\n    this.pageNum = 1;\n    this.totalSubDivisions = 0;\n    this.isLoading = false;\n    this.subDivisions = [];\n    this.dataSource = new MatTableDataSource([]); //dataSource = MatTableDataSource<SubDivision>;\n\n    this.paginator = {};\n    this.sort = {};\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  ngAfterViewInit() {//this.dataSource.paginator = this.paginator;\n  }\n\n  loadData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLoading = true;\n\n      _this.subDivisionService.getAll(_this.pageNum, _this.sortField, _this.sortType).subscribe(result => {\n        //this.subDivisions = result[\"subdivisions\"];\n        //this.dataSource = result[\"subdivisions\"];\n        _this.dataSource = new MatTableDataSource(result[\"subdivisions\"]);\n        _this.dataSource.paginator = _this.paginator;\n        _this.dataSource.sort = _this.sort; //this.dataSource = new MatTableDataSource(this.subDivisions);\n\n        /*\n        if (result.status == \"ok\") {\n          this.subDivisions = result.message.tasks;\n          this.totalTasks = result.message.total_task_count;\n        }*/\n\n        _this.isLoading = false;\n      });\n    })();\n  }\n\n}\n\nSubdivisionDataDisplayComponent.ɵfac = function SubdivisionDataDisplayComponent_Factory(t) {\n  return new (t || SubdivisionDataDisplayComponent)(i0.ɵɵdirectiveInject(i1.SubdivisionDataDisplayService));\n};\n\nSubdivisionDataDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubdivisionDataDisplayComponent,\n  selectors: [[\"app-subdivision-data-display\"]],\n  viewQuery: function SubdivisionDataDisplayComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 27,\n  vars: 6,\n  consts: [[3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"subDivisions\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"code\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"longitude\"], [\"matColumnDef\", \"latitude\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\"], [\"paginator\", \"\"], [3, \"value\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function SubdivisionDataDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Subdivision Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"mat-form-field\")(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Filter on Subdivision Data Code:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-select\");\n      i0.ɵɵtemplate(6, SubdivisionDataDisplayComponent_mat_option_6_Template, 2, 2, \"mat-option\", 0);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"table\", 1);\n      i0.ɵɵelementContainerStart(8, 2);\n      i0.ɵɵtemplate(9, SubdivisionDataDisplayComponent_th_9_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(10, SubdivisionDataDisplayComponent_td_10_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(11, 5);\n      i0.ɵɵtemplate(12, SubdivisionDataDisplayComponent_th_12_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(13, SubdivisionDataDisplayComponent_td_13_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 7);\n      i0.ɵɵtemplate(15, SubdivisionDataDisplayComponent_th_15_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(16, SubdivisionDataDisplayComponent_td_16_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(17, 8);\n      i0.ɵɵtemplate(18, SubdivisionDataDisplayComponent_th_18_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(19, SubdivisionDataDisplayComponent_td_19_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(20, 9);\n      i0.ɵɵtemplate(21, SubdivisionDataDisplayComponent_th_21_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(22, SubdivisionDataDisplayComponent_td_22_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(23, SubdivisionDataDisplayComponent_tr_23_Template, 1, 0, \"tr\", 10);\n      i0.ɵɵtemplate(24, SubdivisionDataDisplayComponent_tr_24_Template, 1, 0, \"tr\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"mat-paginator\", 12, 13);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.subdivisionDataCodes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(5, _c0));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatTable, i3.MatHeaderCellDef, i3.MatHeaderRowDef, i3.MatColumnDef, i3.MatCellDef, i3.MatRowDef, i3.MatHeaderCell, i3.MatCell, i3.MatHeaderRow, i3.MatRow, i4.MatSort, i4.MatSortHeader, i5.MatPaginator],\n  styles: [\".subDivisions[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1YmRpdmlzaW9uLWRhdGEtZGlzcGxheS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGFBQWE7QUFDakIiLCJmaWxlIjoic3ViZGl2aXNpb24tZGF0YS1kaXNwbGF5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3ViRGl2aXNpb25zIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAyNXB4O1xufSJdfQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,SAASA,YAAT,QAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;;;;;;;;;;ICLIC;IACEA;IACFA;;;;;IAFsDA;IACpDA;IAAAA;;;;;;IAOAA;IAAuDA;IAAGA;;;;;;IAC1DA;IAAwCA;IAAeA;;;;;IAAfA;IAAAA;;;;;;IAIxCA;IAAuCA;IAAKA;;;;;;IAC5CA;IAAwCA;IAAiBA;;;;;IAAjBA;IAAAA;;;;;;IAIxCA;IAAuCA;IAAKA;;;;;;IAC5CA;IAAwCA;IAAiBA;;;;;IAAjBA;IAAAA;;;;;;IAIxCA;IAAwCA;IAAUA;;;;;;IAClDA;IAAwCA;IAAsBA;;;;;IAAtBA;IAAAA;;;;;;IAIxCA;IAAwCA;IAASA;;;;;;IACjDA;IAAwCA;IAAqBA;;;;;IAArBA;IAAAA;;;;;;IAG1CA;;;;;;IACAA;;;;;;;;ADbJ,OAAM,MAAOC,+BAAP,CAAsC;EAiB1C;;;;EAKAC,YAAoBC,kBAApB,EAAqE;IAAjD;IArBpB,wBAA6B,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,WAAvB,EAAoC,UAApC,CAA7B;IAEA,gBAAmB,KAAnB,CAmBqE,CAnB3C;;IAC1B,iBAAoB,IAApB,CAkBqE,CAlB3C;;IAC1B,eAAkB,CAAlB;IACA,yBAA4B,CAA5B;IACA,iBAAqB,KAArB;IACA,oBAAmC,EAAnC;IAEA,kBAAa,IAAIJ,kBAAJ,CAAoC,EAApC,CAAb,CAYqE,CAVrE;;IAEyB,iBAAwC,EAAxC;IACL,YAAyB,EAAzB;EAOqD;;EAEzEK,QAAQ;IACN,KAAKC,QAAL;EACD;;EAEDC,eAAe,IACb;EACD;;EAEKD,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACE,SAAL,GAAiB,IAAjB;;MACA,KAAI,CAACJ,kBAAL,CACGK,MADH,CACU,KAAI,CAACC,OADf,EACwB,KAAI,CAACC,SAD7B,EACwC,KAAI,CAACC,QAD7C,EAEGC,SAFH,CAEcC,MAAD,IAAgB;QACzB;QACA;QAEA,KAAI,CAACC,UAAL,GAAkB,IAAIf,kBAAJ,CAAuBc,MAAM,CAAC,cAAD,CAA7B,CAAlB;QACA,KAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4B,KAAI,CAACA,SAAjC;QACA,KAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,KAAI,CAACA,IAA5B,CANyB,CAQzB;;QACA;;;;;;QAKA,KAAI,CAACT,SAAL,GAAiB,KAAjB;MACD,CAjBH;IAFY;EAoBb;;AApDyC;;;mBAA/BN,iCAA+BD;AAAA;;;QAA/BC;EAA+BgB;EAAAC;IAAA;qBAc/BrB,cAAY;qBACZC,SAAO;;;;;;;;;;;;;;;MCvCpBE;MAAGA;MAAgBA;MACnBA,uCAAgB,CAAhB,EAAgB,WAAhB;MACaA;MAAgCA;MAC3CA;MACEA;MAGFA;MAGFA;MACIA;MACEA;MACAA;MACFA;MAEAA;MACEA;MACAA;MACFA;MAEAA;MACEA;MACAA;MACFA;MAEAA;MACEA;MACAA;MACFA;MAEAA;MACEA;MACAA;MACFA;MAEAA;MACAA;MACJA;MAEAA;;;;MApCiCA;MAAAA;MAMRA;MAAAA;MA0BDA;MAAAA;MACaA;MAAAA;MAGXA;MAAAA","names":["MatPaginator","MatSort","MatTableDataSource","i0","SubdivisionDataDisplayComponent","constructor","subDivisionService","ngOnInit","loadData","ngAfterViewInit","isLoading","getAll","pageNum","sortField","sortType","subscribe","result","dataSource","paginator","sort","selectors","viewQuery"],"sourceRoot":"","sources":["/Users/hnm/Downloads/SEIICodeTestIRIS-main/web/src/app/subdivision-data-display/subdivision-data-display.component.ts","/Users/hnm/Downloads/SEIICodeTestIRIS-main/web/src/app/subdivision-data-display/subdivision-data-display.component.html"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { SubdivisionDataDisplayService } from \"src/app/subdivision-data-display/subdivision-data-display.service\";\n\nimport { FormsModule } from \"@angular/forms\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\n\nexport interface SubDivision {}\n\n@Component({\n  selector: \"app-subdivision-data-display\",\n  templateUrl: \"./subdivision-data-display.component.html\",\n  styleUrls: [\"./subdivision-data-display.component.css\"],\n})\nexport class SubdivisionDataDisplayComponent implements OnInit, AfterViewInit {\n  displayedColumns: string[] = [\"id\", \"code\", \"name\", \"longitude\", \"latitude\"];\n\n  sortType: string = \"asc\"; // defaoult value\n  sortField: string = \"id\"; // defaoult value\n  pageNum: number = 1;\n  totalSubDivisions: number = 0;\n  isLoading: boolean = false;\n  subDivisions: Array<SubDivision> = [];\n\n  dataSource = new MatTableDataSource<SubDivision>([]);\n\n  //dataSource = MatTableDataSource<SubDivision>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator = <MatPaginator>{};\n  @ViewChild(MatSort) sort: MatSort = <MatSort>{};\n\n  /*= new MatPaginator(\n    new MatPaginatorIntl(),\n    ChangeDetectorRef.prototype\n  );*/\n\n  constructor(private subDivisionService: SubdivisionDataDisplayService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  ngAfterViewInit() {\n    //this.dataSource.paginator = this.paginator;\n  }\n\n  async loadData() {\n    this.isLoading = true;\n    this.subDivisionService\n      .getAll(this.pageNum, this.sortField, this.sortType)\n      .subscribe((result: any) => {\n        //this.subDivisions = result[\"subdivisions\"];\n        //this.dataSource = result[\"subdivisions\"];\n\n        this.dataSource = new MatTableDataSource(result[\"subdivisions\"]);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        //this.dataSource = new MatTableDataSource(this.subDivisions);\n        /*\n        if (result.status == \"ok\") {\n          this.subDivisions = result.message.tasks;\n          this.totalTasks = result.message.total_task_count;\n        }*/\n        this.isLoading = false;\n      });\n  }\n}\n","<p>Subdivision Data</p>\n<mat-form-field>\n  <mat-label>Filter on Subdivision Data Code:</mat-label>\n  <mat-select>\n    <mat-option *ngFor=\"let food of subdivisionDataCodes\" [value]=\"food.value\">\n      {{food.viewValue}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n\n<table mat-table matSort [dataSource]=\"dataSource\" class=\"subDivisions\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"code\">\n      <th mat-header-cell *matHeaderCellDef> CODE </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> NAME </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"longitude\">\n      <th mat-header-cell *matHeaderCellDef>  LONGITUDE </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.longitude}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"latitude\">\n      <th mat-header-cell *matHeaderCellDef>  LATITUDE </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.latitude}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<mat-paginator #paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" showFirstLastButtons></mat-paginator>\n"]},"metadata":{},"sourceType":"module"}