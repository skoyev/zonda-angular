{"ast":null,"code":"import _asyncToGenerator from \"/Users/hnm/Downloads/SEIICodeTestIRIS-main/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nlet SubdivisionDataDisplayComponent = class SubdivisionDataDisplayComponent {\n  /*= new MatPaginator(\n    new MatPaginatorIntl(),\n    ChangeDetectorRef.prototype\n  );*/\n  constructor(subDivisionService) {\n    this.subDivisionService = subDivisionService;\n    this.displayedColumns = [\"id\", \"code\", \"name\", \"longitude\", \"latitude\"];\n    this.sortType = \"asc\"; // defaoult value\n\n    this.sortField = \"id\"; // defaoult value\n\n    this.pageNum = 1;\n    this.totalSubDivisions = 0;\n    this.isLoading = false;\n    this.subDivisions = [];\n    this.dataSource = new MatTableDataSource([]); //dataSource = MatTableDataSource<SubDivision>;\n\n    this.paginator = {};\n    this.sort = {};\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  ngAfterViewInit() {//this.dataSource.paginator = this.paginator;\n  }\n\n  loadData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLoading = true;\n\n      _this.subDivisionService.getAll(_this.pageNum, _this.sortField, _this.sortType).subscribe(result => {\n        //this.subDivisions = result[\"subdivisions\"];\n        //this.dataSource = result[\"subdivisions\"];\n        _this.dataSource = new MatTableDataSource(result[\"subdivisions\"]);\n        _this.dataSource.paginator = _this.paginator;\n        _this.dataSource.sort = _this.sort; //this.dataSource = new MatTableDataSource(this.subDivisions);\n\n        /*\n        if (result.status == \"ok\") {\n          this.subDivisions = result.message.tasks;\n          this.totalTasks = result.message.total_task_count;\n        }*/\n\n        _this.isLoading = false;\n      });\n    })();\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator)], SubdivisionDataDisplayComponent.prototype, \"paginator\", void 0);\n\n__decorate([ViewChild(MatSort)], SubdivisionDataDisplayComponent.prototype, \"sort\", void 0);\n\nSubdivisionDataDisplayComponent = __decorate([Component({\n  selector: \"app-subdivision-data-display\",\n  templateUrl: \"./subdivision-data-display.component.html\",\n  styleUrls: [\"./subdivision-data-display.component.css\"]\n})], SubdivisionDataDisplayComponent);\nexport { SubdivisionDataDisplayComponent };","map":{"version":3,"mappings":";;AAAA,SAGEA,SAHF,EAKEC,SALF,QAMO,eANP;AAOA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAeA,IAAaC,+BAA+B,GAA5C,MAAaA,+BAAb,CAA4C;EAiB1C;;;;EAKAC,YAAoBC,kBAApB,EAAqE;IAAjD;IArBpB,wBAA6B,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,WAAvB,EAAoC,UAApC,CAA7B;IAEA,gBAAmB,KAAnB,CAmBqE,CAnB3C;;IAC1B,iBAAoB,IAApB,CAkBqE,CAlB3C;;IAC1B,eAAkB,CAAlB;IACA,yBAA4B,CAA5B;IACA,iBAAqB,KAArB;IACA,oBAAmC,EAAnC;IAEA,kBAAa,IAAIH,kBAAJ,CAAoC,EAApC,CAAb,CAYqE,CAVrE;;IAEyB,iBAAwC,EAAxC;IACL,YAAyB,EAAzB;EAOqD;;EAEzEI,QAAQ;IACN,KAAKC,QAAL;EACD;;EAEDC,eAAe,IACb;EACD;;EAEKD,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACE,SAAL,GAAiB,IAAjB;;MACA,KAAI,CAACJ,kBAAL,CACGK,MADH,CACU,KAAI,CAACC,OADf,EACwB,KAAI,CAACC,SAD7B,EACwC,KAAI,CAACC,QAD7C,EAEGC,SAFH,CAEcC,MAAD,IAAgB;QACzB;QACA;QAEA,KAAI,CAACC,UAAL,GAAkB,IAAId,kBAAJ,CAAuBa,MAAM,CAAC,cAAD,CAA7B,CAAlB;QACA,KAAI,CAACC,UAAL,CAAgBC,SAAhB,GAA4B,KAAI,CAACA,SAAjC;QACA,KAAI,CAACD,UAAL,CAAgBE,IAAhB,GAAuB,KAAI,CAACA,IAA5B,CANyB,CAQzB;;QACA;;;;;;QAKA,KAAI,CAACT,SAAL,GAAiB,KAAjB;MACD,CAjBH;IAFY;EAoBb;;AApDyC,CAA5C;;AAc2BU,YAAxBpB,SAAS,CAACC,YAAD,CAAe;;AACLmB,YAAnBpB,SAAS,CAACE,OAAD,CAAU;;AAfTE,+BAA+B,eAL3CL,SAAS,CAAC;EACTsB,QAAQ,EAAE,8BADD;EAETC,WAAW,EAAE,2CAFJ;EAGTC,SAAS,EAAE,CAAC,0CAAD;AAHF,CAAD,CAKkC,GAA/BnB,+BAA+B,CAA/B;SAAAA","names":["Component","ViewChild","MatPaginator","MatSort","MatTableDataSource","SubdivisionDataDisplayComponent","constructor","subDivisionService","ngOnInit","loadData","ngAfterViewInit","isLoading","getAll","pageNum","sortField","sortType","subscribe","result","dataSource","paginator","sort","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/hnm/Downloads/SEIICodeTestIRIS-main/web/src/app/subdivision-data-display/subdivision-data-display.component.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { SubdivisionDataDisplayService } from \"src/app/subdivision-data-display/subdivision-data-display.service\";\n\nimport { FormsModule } from \"@angular/forms\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\n\nexport interface SubDivision {}\n\n@Component({\n  selector: \"app-subdivision-data-display\",\n  templateUrl: \"./subdivision-data-display.component.html\",\n  styleUrls: [\"./subdivision-data-display.component.css\"],\n})\nexport class SubdivisionDataDisplayComponent implements OnInit, AfterViewInit {\n  displayedColumns: string[] = [\"id\", \"code\", \"name\", \"longitude\", \"latitude\"];\n\n  sortType: string = \"asc\"; // defaoult value\n  sortField: string = \"id\"; // defaoult value\n  pageNum: number = 1;\n  totalSubDivisions: number = 0;\n  isLoading: boolean = false;\n  subDivisions: Array<SubDivision> = [];\n\n  dataSource = new MatTableDataSource<SubDivision>([]);\n\n  //dataSource = MatTableDataSource<SubDivision>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator = <MatPaginator>{};\n  @ViewChild(MatSort) sort: MatSort = <MatSort>{};\n\n  /*= new MatPaginator(\n    new MatPaginatorIntl(),\n    ChangeDetectorRef.prototype\n  );*/\n\n  constructor(private subDivisionService: SubdivisionDataDisplayService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  ngAfterViewInit() {\n    //this.dataSource.paginator = this.paginator;\n  }\n\n  async loadData() {\n    this.isLoading = true;\n    this.subDivisionService\n      .getAll(this.pageNum, this.sortField, this.sortType)\n      .subscribe((result: any) => {\n        //this.subDivisions = result[\"subdivisions\"];\n        //this.dataSource = result[\"subdivisions\"];\n\n        this.dataSource = new MatTableDataSource(result[\"subdivisions\"]);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        //this.dataSource = new MatTableDataSource(this.subDivisions);\n        /*\n        if (result.status == \"ok\") {\n          this.subDivisions = result.message.tasks;\n          this.totalTasks = result.message.total_task_count;\n        }*/\n        this.isLoading = false;\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}